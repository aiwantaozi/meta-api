syntax = "proto3";

package schema;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/seal-io/meta/api/schema";

message ComplianceLicense {
  // primary key
  string namespace = 1;
  string name = 2;

  // management
  google.protobuf.Timestamp create_time = 11;
  google.protobuf.Timestamp update_time = 12;
  optional google.protobuf.Timestamp deprecate_time = 13;
  repeated string tags = 14;

  // information
  string code = 21;
  string description = 22;
  repeated string references = 23;

  // operation
  bytes details = 31;
}

message ComplianceLicenses {
  repeated ComplianceLicense items = 1;
}

message ComplianceLicenseTag {
  // primary key
  string name = 1;

  // management
  google.protobuf.Timestamp create_time = 11;
  google.protobuf.Timestamp update_time = 12;
  optional google.protobuf.Timestamp deprecate_time = 13;

  // information
  string description = 21;
  repeated string references = 22;

  // operation
  string category = 31;
}

message ComplianceLicenseTags {
  repeated ComplianceLicenseTag items = 1;
}

message RiskSecretLeak {
  // primary key
  string namespace = 1;
  string name = 2;

  // management
  google.protobuf.Timestamp create_time = 11;
  google.protobuf.Timestamp update_time = 12;
  optional google.protobuf.Timestamp deprecate_time = 13;
  repeated string tags = 14;

  // information
  string code = 21;
  string description = 22;
  repeated string references = 23;

  // operation
  bytes block = 31;
  bytes allow = 32;
}

message RiskSecretLeaks {
  repeated RiskSecretLeak items = 1;
}

message RiskSecretLeakTag {
  // primary key
  string name = 1;

  // management
  google.protobuf.Timestamp create_time = 11;
  google.protobuf.Timestamp update_time = 12;
  optional google.protobuf.Timestamp deprecate_time = 13;

  // information
  string description = 21;
  repeated string references = 22;

  // operation
  string category = 31;
}

message RiskSecretLeakTags {
  repeated RiskSecretLeakTag items = 1;
}

message WeaknessVulnerability {
  // primary key
  string namespace = 1;
  string name = 2;
  string purl = 3;

  // management
  google.protobuf.Timestamp create_time = 11;
  google.protobuf.Timestamp update_time = 12;
  optional google.protobuf.Timestamp deprecate_time = 13;
  repeated string tags = 14;

  // information
  string code = 21;
  string description = 22;
  repeated string references = 23;

  // operation
  string summary = 31;
  string purl_fuzzy = 32;
  string limited = 33;
  string affected = 34;
  repeated string patched = 35;
  bytes cvss = 36;
  repeated string cwes = 37;
  google.protobuf.Timestamp published = 38;
  google.protobuf.Timestamp modified = 39;
}

message WeaknessVulnerabilities {
  repeated WeaknessVulnerability items = 1;
}

message WeaknessVulnerabilityTag {
  // primary key
  string name = 1;

  // management
  google.protobuf.Timestamp create_time = 11;
  google.protobuf.Timestamp update_time = 12;
  optional google.protobuf.Timestamp deprecate_time = 13;

  // information
  string description = 21;
  repeated string references = 22;

  // operation
  string category = 31;
  bytes cvsses = 32;
  repeated string cwes = 33;
  google.protobuf.Timestamp published = 34;
  google.protobuf.Timestamp modified = 35;
}

message WeaknessVulnerabilityTags {
  repeated WeaknessVulnerabilityTag items = 1;
}

enum DatasetIngestRequestType {
  Compliance_License_Tag = 0;
  Compliance_License = 1;
  Risk_Secret_Leak_Tag = 2;
  Risk_Secret_Leak = 3;
  Weakness_Vulnerability_Tag = 4;
  Weakness_Vulnerability = 5;
}

message DatasetIngestRequest {
  // continuation
  int32 window = 1; // start from 0
  optional int32 window_size = 2;

  // condition
  DatasetIngestRequestType type = 11;
  optional google.protobuf.Timestamp since = 12;
}

message DatasetIngestResponse{
  // continuation
  optional int32 next_window = 1;
  int32 window_size = 2;

  // result
  oneof body {
    ComplianceLicenses compliance_licenses = 11;
    ComplianceLicenseTags compliance_license_tags = 12;
    RiskSecretLeaks risk_secret_leaks = 13;
    RiskSecretLeakTags risk_secret_leak_tags = 14;
    WeaknessVulnerabilities weakness_vulnerabilities = 15;
    WeaknessVulnerabilityTags weakness_vulnerability_tags = 16;
  }
}

service DatasetService {
  rpc Ingest(stream DatasetIngestRequest) returns (stream DatasetIngestResponse) {}
}